文档元数据:
   _index   => 文档所属的索引名
   _type    => 文档所属的类型名
   _id      => 文档唯一ID
   _source  => 文档的原始json数据
   _version => 文档的版本信息
   _score   => 相关性打分

index 索引是文档的容器,是一类文档的结合
   index体现了逻辑空间的概念:每个索引都有自己的Mapping定义,用于定义包含的文档的字段名和字段类型
   shard体现了物理空间的概念,索引中数据分散在shard上
   Mapping定义文档字段的类型
   Setting定义不同数据的分布

关系型数据库与ES对比
   table  => index(type)
   row    => document
   column => field
   schema => mapping
   sql    => dsl

数据分片的设定
    分片数设置过小
    1,导致后续无法增加节点实现水平扩展
    2,单个分片数据量太大,导致数据重新分配耗时

    分片设置过大
    1,影响搜索结果相关性打分,影响统计结果准确性
    2,单个节点上过多的分片,会导致资源浪费,同时也会影响性能

倒排索引包含两个部分
    单词词典,记录所有文档的单词,记录单词到倒排列表的关联关系
        单词词典一般比较大,可以通过B+数或哈希拉链法实现,以满足高性能的插入与查询
    倒排列表,记录了单词对应的文档结合,由倒排索引项组成
        倒排索引项
           文档id;
           词频TF-该单词在文档中出现的次数,用于相关性评分
           位置-单词在文档中分词的位置。用于语句搜索
           偏移-记录单词的开始结束位置,实现高亮显示
     Elasticsearch的json文档中的每个字段,都有自己的倒排索引
     可以指定对某些字段不做索引
            优点:节省存储空间
            缺点:字段无法被搜索
